
==========================================
==============SAMPLE QUERIES==============
==========================================

var results = from anItem in Reservations
where anItem.SpecialEvents.EventCode.Equals("S") &&
DateTime.Today.AddDays(-30) < anItem.ReservationDate
orderby anItem.NumberInParty descending
select new
{
	anItem.CustomerName,
	anItem.NumberInParty,
	anItem.SpecialEvents.Description,
	ResDate = string.Format("{0:dd MMM, yyyy}", anItem.ReservationDate)
};
results.Dump();
results.Count().Dump("Count of Instances");

var entity = from anItem in SpecialEvents
select anItem;
entity.Dump();

var bill = from billStuff in Bills
select billStuff;
bill.Dump();

var resultsOne = from anItemOne in Bills 
join anItemTwo in BillItems on anItemOne.BillID equals anItemTwo.BillID
select new
{
	anItemOne.BillID,
	anItemOne.PaidStatus,
	anItemOne.NumberInParty,
	anItemOne.WaiterID,
	anItemTwo.SalePrice,
	anItemTwo.UnitCost
};
resultsOne.Dump();



=========================================
===============USING POCOS===============
=========================================
void Main()
{
	var date = new DateTime(2014, 10, 24);
	date.Dump();
	
	ReservationsByTime(date).Dump();
}


//List ReservationsByTime
public List<dynamic> ReservationsByTime(DateTime date)					//Change Dynamic to DTO.ClassName
{
	var results = from data in Reservations 
				where data.ReservationDate.Year == date.Year
				  		&& data.ReservationDate.Month == date.Month
						&& data.ReservationDate.Day == date.Day
						&& data.ReservationStatus == 'B'
				select new												//DTO.ClassName
				{
					Name = data.CustomerName,
					Contact = data.ContactPhone,
					Date = data.ReservationDate,
					NumberInParty = data.NumberInParty,
					Status = data.ReservationStatus,
					EventType = data.SpecialEvents.Description
				};
				
	//Example of Grouping.
	var finalResults = from data in results
					orderby data.NumberInParty
					group data by data.Date.TimeOfDay into itemGroup
					select new
				{
					SeatingTime = itemGroup.Key,
					Reservations = itemGroup.ToList()
				};
	
				
	return finalResults.ToList<dynamic>();								//Remove 'Dynamic' when placed into actual program.
}