
==========================================
==============SAMPLE QUERIES==============
==========================================

var results = from anItem in Reservations
where anItem.SpecialEvents.EventCode.Equals("S") &&
DateTime.Today.AddDays(-30) < anItem.ReservationDate
orderby anItem.NumberInParty descending
select new
{
	anItem.CustomerName,
	anItem.NumberInParty,
	anItem.SpecialEvents.Description,
	ResDate = string.Format("{0:dd MMM, yyyy}", anItem.ReservationDate)
};
results.Dump();
results.Count().Dump("Count of Instances");

var entity = from anItem in SpecialEvents
select anItem;
entity.Dump();

var bill = from billStuff in Bills
select billStuff;
bill.Dump();

var resultsOne = from anItemOne in Bills 
join anItemTwo in BillItems on anItemOne.BillID equals anItemTwo.BillID
select new
{
	anItemOne.BillID,
	anItemOne.PaidStatus,
	anItemOne.NumberInParty,
	anItemOne.WaiterID,
	anItemTwo.SalePrice,
	anItemTwo.UnitCost
};
resultsOne.Dump();



=========================================
===============USING POCOS===============
=========================================

void Main()
{	
	var results = from category in MenuCategories
		orderby category.Description
		select new CategoryMenuItems()
		{
			Description = category.Description,
			MenuItem = from rowItem in category.Items
				where rowItem.Active 
				select new MenuItem()
				{
					Description = rowItem.Description,
					CurrentPrice = rowItem.CurrentPrice,
					Calories = rowItem.Calories,
					Comment = rowItem.Comment
				}
		};

	results.Dump();
}

// Define other methods and classes here
public class MenuItem
	{
		public string Description { get; set; }
		public decimal CurrentPrice { get; set; }
		public int? Calories { get; set; }
		public string Comment { get; set; }
	}

public class CategoryMenuItems
	{
		public string Description { get; set; }
		public IEnumerable MenuItem { get; set; }
	}